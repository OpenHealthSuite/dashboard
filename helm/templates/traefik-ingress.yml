---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  annotations:
    cert-manager.io/issuer: letsencrypt-prod
    acme.cert-manager.io/http01-edit-in-place: "true"
  name: traefik-paceme-api
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  routes:
    - match: Host(`{{ required "hostname is required" .Values.hostname }}`) && PathPrefix(`/api`)
      kind: Rule
      middlewares:
        - name: oauth-errors
        - name: paceme-oauth2-proxy
        - name: api-stripprefix
      services:
        - name: paceme-api
          port: 8081
    - match: "Host(`{{ required "hostname is required" .Values.hostname }}`) && PathPrefix(`/oauth2`)"
      kind: Rule
      services:
        - name: paceme-oauth2-proxy
          namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
          port: 4180
      middlewares:
        - name: oauth-errors
    - match: Host(`{{ required "hostname is required" .Values.hostname }}`)
      kind: Rule
      middlewares:
        - name: oauth-errors
        - name: paceme-oauth2-proxy
      services:
        - name: paceme-webapp
          port: 9000
  tls:
    secretName: paceme-le-certificate
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: api-stripprefix
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  stripPrefix:
    prefixes:
      - /api
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: oauth-errors
spec:
  errors:
    status:
      - "401-403"
    service:
      name: paceme-oauth2-proxy
      port: 4180
    query: "/oauth2/sign_in"
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: paceme-oauth2-proxy
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  forwardAuth:
    address: http://paceme-oauth2-proxy.{{ required "metadata.namespace is required" .Release.Namespace }}.svc:4180/oauth2/auth
    trustForwardHeader: true
    authResponseHeaders:
      - X-Auth-Request-User
      - Set-Cookie
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: paceme-oauth2-proxy
  name: paceme-oauth2-proxy
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 4180
    protocol: TCP
    targetPort: 4180
  selector:
    k8s-app: paceme-oauth2-proxy
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: paceme-oauth2-proxy
  name: paceme-oauth2-proxy
  namespace: {{ required "metadata.namespace is required" .Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: paceme-oauth2-proxy
  template:
    metadata:
      labels:
        k8s-app: paceme-oauth2-proxy
    spec:
      containers:
      - args:
        - --provider=oidc
        - --oidc-issuer-url={{ required "oauth2.oidcIssuerUrl is required" .Values.oauth2.oidcIssuerUrl  }}
        - --email-domain=*
        - --upstream=file:///dev/null
        - --http-address=0.0.0.0:4180
        - --pass-user-headers=true
        - --set-authorization-header=true
        - --set-xauthrequest=true
        - --reverse-proxy=true
        env:
        - name: OAUTH2_PROXY_CLIENT_ID
          value: {{ required "oauth2.clientid is required" .Values.oauth2.clientid  }}
        - name: OAUTH2_PROXY_CLIENT_SECRET
          value: {{ required "oauth2.secret is required" .Values.oauth2.secret }}
        - name: OAUTH2_PROXY_COOKIE_SECRET
          value: {{ required "oauth2.cookiesecret is required" .Values.oauth2.cookiesecret }}
        image: quay.io/oauth2-proxy/oauth2-proxy:{{ .Values.oauth2.imageversion | default "latest" }}
        imagePullPolicy: Always
        name: paceme-oauth2-proxy
        ports:
        - containerPort: 4180
          protocol: TCP